apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'


group 'de.hhu.stups'
version '1.0.2-SNAPSHOT'


repositories { mavenCentral() }

dependencies { compile 'junit:junit:4.12' 
			   classpath 'org.ajoberstar:gradle-git:0.2.3' 	
			}

if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {

	println "Configuring deployment for ${ project.name }"

	apply plugin: 'signing'

	javadoc { failOnError = false }

	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}
	//Quelle:	https://github.com/ajoberstar/gradle-git
	import org.ajoberstar.gradle.git.tasks.*

	task cloneGitRepo(type: GitClone) {
        def destination = file("destination_folder")
        uri = "https://github.com/ProPra16/programmierpraktikum-abschlussprojekt-the-fellowship-of-the-string/search?utf8=%E2%9C%93&q=uri"
        destinationPath = destination
        bare = false
        enabled = !destination.exists() //to clone only once
	}

	artifacts { archives javadocJar, sourcesJar }


	signing { sign configurations.archives }

	uploadArchives {
		repositories {
			mavenDeployer {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
					authentication(userName: ossrhUsername, password: ossrhPassword)
				}

				snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
					authentication(userName: ossrhUsername, password: ossrhPassword)
				}

				pom.project {
					name project.getName()
					packaging 'jar'
					// optionally artifactId can be defined here
					description 'Virtual Kata Compiler'
					url 'https://github.com/bendisposto/virtual-kata-lib'

					licenses {
						license {
							name 'Eclipse Public License, Version 1.0'
							url 'http://www.eclipse.org/org/documents/epl-v10.html'
						}
					}

					scm {
						connection 'scm:git:git://github.com/bendisposto/virtual-kata-lib.git'
						developerConnection 'scm:git:git@github.com:bendisposto/virtual-kata-lib.git'
						url 'https://github.com/bendisposto/virtual-kata-lib'
					}


					developers {
						developer {
							id 'bendisposto'
							name 'Jens Bendisposto'
							email 'jens@bendisposto.de'
						}
					}
				}
			}
		}
	}
}
